/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Main, MainInterface } from "../Main";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "int256",
        name: "cardCount",
        type: "int256",
      },
    ],
    name: "createCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060008081905550610bda806100276000396000f3fe60806040523480156200001157600080fd5b50600436106200002e5760003560e01c8063ac76ba3f1462000033575b600080fd5b6200005160048036038101906200004b9190620001be565b62000053565b005b8282826040516200006490620000fd565b62000072939291906200029d565b604051809103906000f0801580156200008f573d6000803e3d6000fd5b5060016000806000815480929190620000a89062000302565b91905055815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b610855806200035083390190565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126200013d576200013c62000115565b5b8235905067ffffffffffffffff8111156200015d576200015c6200011a565b5b6020830191508360018202830111156200017c576200017b6200011f565b5b9250929050565b6000819050919050565b620001988162000183565b8114620001a457600080fd5b50565b600081359050620001b8816200018d565b92915050565b600080600060408486031215620001da57620001d96200010b565b5b600084013567ffffffffffffffff811115620001fb57620001fa62000110565b5b620002098682870162000124565b935093505060206200021e86828701620001a7565b9150509250925092565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b600062000267838562000228565b93506200027683858462000239565b620002818362000248565b840190509392505050565b620002978162000183565b82525050565b60006040820190508181036000830152620002ba81858762000259565b9050620002cb60208301846200028c565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200030f8262000183565b91507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620003445762000343620002d3565b5b60018201905091905056fe60806040523480156200001157600080fd5b506040516200085538038062000855833981810160405281019062000037919062000226565b8160009081620000489190620004d7565b50806001819055505050620005be565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000c18262000076565b810181811067ffffffffffffffff82111715620000e357620000e262000087565b5b80604052505050565b6000620000f862000058565b9050620001068282620000b6565b919050565b600067ffffffffffffffff82111562000129576200012862000087565b5b620001348262000076565b9050602081019050919050565b60005b838110156200016157808201518184015260208101905062000144565b60008484015250505050565b6000620001846200017e846200010b565b620000ec565b905082815260208101848484011115620001a357620001a262000071565b5b620001b084828562000141565b509392505050565b600082601f830112620001d057620001cf6200006c565b5b8151620001e28482602086016200016d565b91505092915050565b6000819050919050565b6200020081620001eb565b81146200020c57600080fd5b50565b6000815190506200022081620001f5565b92915050565b6000806040838503121562000240576200023f62000062565b5b600083015167ffffffffffffffff81111562000261576200026062000067565b5b6200026f85828601620001b8565b925050602062000282858286016200020f565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002df57607f821691505b602082108103620002f557620002f462000297565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200035f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000320565b6200036b868362000320565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003b8620003b2620003ac8462000383565b6200038d565b62000383565b9050919050565b6000819050919050565b620003d48362000397565b620003ec620003e382620003bf565b8484546200032d565b825550505050565b600090565b62000403620003f4565b62000410818484620003c9565b505050565b5b8181101562000438576200042c600082620003f9565b60018101905062000416565b5050565b601f82111562000487576200045181620002fb565b6200045c8462000310565b810160208510156200046c578190505b620004846200047b8562000310565b83018262000415565b50505b505050565b600082821c905092915050565b6000620004ac600019846008026200048c565b1980831691505092915050565b6000620004c7838362000499565b9150826002028217905092915050565b620004e2826200028c565b67ffffffffffffffff811115620004fe57620004fd62000087565b5b6200050a8254620002c6565b620005178282856200043c565b600060209050601f8311600181146200054f57600084156200053a578287015190505b620005468582620004b9565b865550620005b6565b601f1984166200055f86620002fb565b60005b82811015620005895784890151825560018201915060208501945060208101905062000562565b86831015620005a95784890151620005a5601f89168262000499565b8355505b6001600288020188555050505b505050505050565b61028780620005ce6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806306fdde031461003b5780631b6cde1014610059575b600080fd5b610043610077565b604051610050919061019b565b60405180910390f35b610061610105565b60405161006e91906101d6565b60405180910390f35b6000805461008490610220565b80601f01602080910402602001604051908101604052809291908181526020018280546100b090610220565b80156100fd5780601f106100d2576101008083540402835291602001916100fd565b820191906000526020600020905b8154815290600101906020018083116100e057829003601f168201915b505050505081565b60015481565b600081519050919050565b600082825260208201905092915050565b60005b8381101561014557808201518184015260208101905061012a565b60008484015250505050565b6000601f19601f8301169050919050565b600061016d8261010b565b6101778185610116565b9350610187818560208601610127565b61019081610151565b840191505092915050565b600060208201905081810360008301526101b58184610162565b905092915050565b6000819050919050565b6101d0816101bd565b82525050565b60006020820190506101eb60008301846101c7565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061023857607f821691505b60208210810361024b5761024a6101f1565b5b5091905056fea2646970667358221220d6113f181ef94ab5980c03f7d782fddf99ed3ef933b546ab69cf7723783ae68f64736f6c63430008140033a264697066735822122052ee24a628030388cd37807d3f837ccfd890e6bf919f1865b6a2a979b57a006b64736f6c63430008140033";

type MainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Main__factory extends ContractFactory {
  constructor(...args: MainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Main> {
    return super.deploy(overrides || {}) as Promise<Main>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Main {
    return super.attach(address) as Main;
  }
  override connect(signer: Signer): Main__factory {
    return super.connect(signer) as Main__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MainInterface {
    return new utils.Interface(_abi) as MainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Main {
    return new Contract(address, _abi, signerOrProvider) as Main;
  }
}
